{"ast":null,"code":"var _jsxFileName = \"/home/keneddy/development/code/phase4/SecLink-Ke/seclinkkenya/client/src/components/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\"); // Retrieve the token from localStorage\n\n    if (!token) {\n      navigate(\"/login\"); // Redirect if no token is found\n      return;\n    }\n\n    // Make the session check request with the token\n    axios.get(\"http://localhost:5555/check-session\", {\n      headers: {\n        Authorization: `Bearer ${token}` // Include the token in the Authorization header\n      }\n    }).then(response => {\n      setIsAuthenticated(true); // User is authenticated\n    }).catch(error => {\n      console.error(\"Session check failed\", error);\n      localStorage.removeItem(\"token\"); // Clear the token if the session check fails\n      navigate(\"/login\"); // Redirect to login\n    });\n  }, [navigate]);\n  if (!isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 12\n    }, this); // Display loading state until authentication is verified\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"h+xcTbG3Lgr87EDneWrcj9j4fAU=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","axios","useNavigate","jsxDEV","_jsxDEV","Dashboard","_s","isAuthenticated","setIsAuthenticated","navigate","token","localStorage","getItem","get","headers","Authorization","then","response","catch","error","console","removeItem","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/keneddy/development/code/phase4/SecLink-Ke/seclinkkenya/client/src/components/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\n\nfunction Dashboard() {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");  // Retrieve the token from localStorage\n\n    if (!token) {\n      navigate(\"/login\");  // Redirect if no token is found\n      return;\n    }\n\n    // Make the session check request with the token\n    axios\n      .get(\"http://localhost:5555/check-session\", {\n        headers: {\n          Authorization: `Bearer ${token}`,  // Include the token in the Authorization header\n        },\n      })\n      .then((response) => {\n        setIsAuthenticated(true);  // User is authenticated\n      })\n      .catch((error) => {\n        console.error(\"Session check failed\", error);\n        localStorage.removeItem(\"token\");  // Clear the token if the session check fails\n        navigate(\"/login\");  // Redirect to login\n      });\n  }, [navigate]);\n\n  if (!isAuthenticated) {\n    return <div>Loading...</div>;  // Display loading state until authentication is verified\n  }\n\n  return (\n    <div>\n      <h1>Dashboard</h1>\n      {/* Render dashboard content */}\n    </div>\n  );\n}\n\nexport default Dashboard;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAMS,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAE9BH,SAAS,CAAC,MAAM;IACd,MAAMW,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAE;;IAE9C,IAAI,CAACF,KAAK,EAAE;MACVD,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAE;MACrB;IACF;;IAEA;IACAR,KAAK,CACFY,GAAG,CAAC,qCAAqC,EAAE;MAC1CC,OAAO,EAAE;QACPC,aAAa,EAAE,UAAUL,KAAK,EAAE,CAAG;MACrC;IACF,CAAC,CAAC,CACDM,IAAI,CAAEC,QAAQ,IAAK;MAClBT,kBAAkB,CAAC,IAAI,CAAC,CAAC,CAAE;IAC7B,CAAC,CAAC,CACDU,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5CR,YAAY,CAACU,UAAU,CAAC,OAAO,CAAC,CAAC,CAAE;MACnCZ,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAE;IACvB,CAAC,CAAC;EACN,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;EAEd,IAAI,CAACF,eAAe,EAAE;IACpB,oBAAOH,OAAA;MAAAkB,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,CAAC,CAAE;EACjC;EAEA,oBACEtB,OAAA;IAAAkB,QAAA,eACElB,OAAA;MAAAkB,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEf,CAAC;AAEV;AAACpB,EAAA,CAvCQD,SAAS;EAAA,QAECH,WAAW;AAAA;AAAAyB,EAAA,GAFrBtB,SAAS;AAyClB,eAAeA,SAAS;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}